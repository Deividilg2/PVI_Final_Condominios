@model PVI_Final_Condominios.Models.CobrosModels
@{
    ViewBag.Title = "CrearCobros";
}

<!--Colocamos un Script para mandar una alerta de confirmación en caso de querer cancelar una reservación-->



<h2>Crear Cobros</h2>

<form method="post" id="myform">
    @Html.HiddenFor(model => model.idcobro)
    <div class="md-3">
        <label class="form-label" for="idCliente">Cliente</label>
        <select id="idCliente" name="idCliente" class="form-control">
            <option value="">Seleccione un cliente</option>
        </select>
    </div>

    <div class="md-3">
        <label class="form-label" for="idCasa">Casa</label>
        <select id="idCasa" name="idCasa" class="form-control">
            <option value="">Seleccione una casa</option>
        </select>
    </div>

    <div class="md-3">
        <label class="form-label" for="anno">Año</label>
        @Html.DropDownListFor(model => model.anno,(IEnumerable<SelectListItem>)ViewBag.annos,"Seleccione un año",new { @class = "form-control" })
    </div>

    <div class="md-3">
        <label class="form-label" for="mes">Mes</label>
        @Html.DropDownListFor(model => model.mes, (IEnumerable<SelectListItem>)ViewBag.meses, "Seleccione un mes", new { @class = "form-control" })
    </div>

    <div class="mt-2 mb-3">
        @foreach (var servicio in ViewBag.servicios)
        {
            <div class="mt-1">
                @*El atributo "name" es el que pasamos abajo en el js para definir que es requerido para poder guardar*@
                <input type="checkbox" id="servicioSeleccionado_@servicio.Id_servicio" name="servicioSeleccionado[]" value="@servicio.Id_servicio" 
                       @if(ViewBag.serviciosSeleccionados != null)
                {//Codigo que nos permite tomar la lista almacenada en el viewbag para seleccionar los checkbox
                    @((ViewBag.serviciosSeleccionados).Contains(servicio.Id_servicio) ? "checked" : "")//verificamos un valor específico dentro de la lista con Contains() en este caso es Id_servicio
                }
                       />
                <label class="form-label" for="servicioSeleccionado_@servicio.Id_servicio">@servicio.Column4 : @servicio.Nombre</label>
            </div>
        }
    </div>

    <input type="submit" onclick="guardarServicios();" class="btn btn-primary" value="Guardar" />
    <a href="/Cobros/ConsultarCobros" class="btn btn-secondary">Regresar</a>
    @ViewBag.resultado
</form>


@if (ViewBag.Estadocasa != null)//Nota: Se recarga la pagina al coincidir y se borran los datos selecionados
{
    <!--Colocamos un Script para mandar una alerta de confirmación en caso de querer cancelar una reservación-->
    <script type="text/javascript">
        alert('No se ha logrado realizar el cobro debido a que existe un cobro pendiente en la casa elegida');
    </script>
}


@ViewBag.resultado



@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ValidacionesGenericas 1.js"></script>
    <script type="text/javascript">
        $("#myform").validate({
            rules: {
                'idCliente': {
                    required: true
                },
                'idCasa': {
                    required: true,
                },
                'annos': {
                    required: true
                },
                'costo': {
                    required: true
                },
                'mes': {
                    required: true
                },
                'servicioSeleccionado[]': {
                    required: true
                }
            }
        });


        function guardarServicios() {
            //Obtenemos todos los checkboxes seleccionados
            var checkboxes = document.querySelectorAll("input[name='servicioSeleccionado[]']:checked");

            //Creamos un arreglo para almacenar los valores de los checkboxes que seleccionamos
            var serviciosSeleccionados = [];
            checkboxes.forEach((checkbox) => {
                serviciosSeleccionados.push(parseInt(checkbox.value, 10)); // Convertimos a entero
            });

            //Enviamos el array al controlador usando AJAX
            fetch('/Cobros/GuardarServicios', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ servicioSeleccionado: serviciosSeleccionados })
            })
        }


        function loadDropdown(url, parametros, ddl, selected) {//Parametros que va a recibir nuestra funcion
            $.post(url, parametros, function (data) {//Elegimos el metodo por el que sera enviado
                ddl.empty();//Vaciamos el ddl
                ddl.append("<option value=''>Seleccione una opcion</option");
                $(data).each(function () {
                    var option = new Option(this.Nombre, this.Id);
                    if (this.Id == selected) {
                        option.selected = true;
                    }
                    ddl.append(option);
                });
            });
        };

        function setChanges() {
            $("#idCliente").change(function () {
                loadDropdown("/Cobros/DdlCasas", { Id: $("#idCliente").val() }, $("#idCasa"));
                cleanDropdown($("#idCasa"));
            });
        };

        function cleanDropdown(ddl) {
            ddl.empty();
            ddl.append("<option value=''>Seleccione una opcion</option>");
        };

        $(document).ready(function () {
            var idcliente = @((this.Model != null) ? this.Model.idCliente : 0);
            var idcasa =@((this.Model !=null) ? this.Model.idcasa :0 );

            loadDropdown("/Cobros/DdlClientes", {}, $("#idCliente"), idcliente);
            if (idcasa != 0) {
                loadDropdown("/Cobros/DdlCasas", { Id: idcliente }, $("#idCasa"), idcasa);
            }

        setChanges();
        });



    </script>
}